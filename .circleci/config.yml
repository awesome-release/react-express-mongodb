version: 2.1

jobs:
  # In this example, we are not actually building and pushing docker image
  build-and-upload-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Build and push docker image
          command: |
            mkdir tmp
            echo "Building docker image..."
            echo "Push docker image..."
            echo "232490755822.dkr.ecr.us-west-2.amazonaws.com/awesome-release/react-express-mongodb/frontend:main" > tmp/image_name
      - persist_to_workspace:
          root: .
          paths:
            - tmp/*

  release-create-environment:
    docker:
      - image: public.ecr.aws/b4g8c3s2/release-cli
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Create a new Release environment
          command: |
            IMAGE_URL=$(cat tmp/image_name)
            BRANCH=e2e-testing
            SERVICE=frontend
            /release environments create \
              --account "$RELEASE_ACCOUNT_ID" \
              --app "$RELEASE_APP_ID" \
              --branch "$BRANCH" \
              --image-overrides "$SERVICE=$IMAGE_URL" \
              --output json \
              --wait > tmp/json
      - persist_to_workspace:
          root: .
          paths:
            - tmp/*

  run-e2e-tests:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Create Release Environment
          command: |
            echo "Install dependencies and run E2E tests..."
            FRONTEND_URL=$(jq -r '.environment.hostnames | .[] | select(.target=="frontend").hostname' tmp/json)
            BACKEND_URL=$(jq -r '.environment.hostnames | .[] | select(.target=="backend").hostname' tmp/json)
            jq -n --arg baseUrl "$FRONTEND_URL" '{ baseUrl: $baseUrl }' > cypress.json
            jq -n --arg backendUrl "$BACKEND_URL" '{ backendUrl: $backendUrl }' > cypress.env.json
            sudo apt-get update
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
            npm install
            npm run cy:run

workflows:
  my_workflow:
    jobs:
      - build-and-upload-image
      - release-create-environment:
          requires: [build-and-upload-image]
      - run-e2e-tests:
          requires: [release-create-environment]